datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id          String                    @id
  name        String?
  email       String                    @unique
  image       String
  orgs        Org[]
  invitedUser invitedUserOrganization[]
}

model Org {
  id     String  @id @default(uuid())
  title  String
  boards Board[]

  ownerId String
  owner   User   @relation(fields: [ownerId], references: [id])

  invitedUser invitedUserOrganization[]

  @@index([ownerId])
}

model Board {
  id            String   @id @default(uuid())
  title         String
  imageId       String
  imageThumbUrl String   @db.Text
  imageFullUrl  String   @db.Text
  imageUserName String   @db.Text
  imageLinkHTML String   @db.Text
  orgId         String
  organization  Org?     @relation(fields: [orgId], references: [id])
  lists         List[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@index([orgId])
}

model List {
  id        String   @id @default(uuid())
  title     String
  order     Int
  boardId   String
  board     Board    @relation(fields: [boardId], references: [id], onDelete: Cascade)
  cards     Card[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([boardId])
}

model Card {
  id          String   @id @default(uuid())
  title       String
  order       Int
  description String?  @db.Text
  listId      String
  list        List     @relation(fields: [listId], references: [id], onDelete: Cascade)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([listId])
}

model invitedUserOrganization {
  user   User   @relation(fields: [userId], references: [id])
  userId String
  Org    Org    @relation(fields: [orgId], references: [id])
  orgId  String

  @@id([userId, orgId])
  @@index([userId])
  @@index([orgId])
}
